"use strict";(self.webpackChunkstudio=self.webpackChunkstudio||[]).push([[9851],{655:e=>{e.exports="/static/docs/676d55b8bf07fc68.png"},4746:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Processes/annotation","title":"Annotation and Training Sets","description":"Overview","source":"@site/docs/Processes/annotation.md","sourceDirName":"Processes","slug":"/Processes/annotation","permalink":"/docs/Processes/annotation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Processes/annotation.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Image Tiling","permalink":"/docs/Processes/tiling"},"next":{"title":"Training Process","permalink":"/docs/Processes/training"}}');var s=i(4848),a=i(8453);const r={sidebar_position:2},l="Annotation and Training Sets",o={},c=[{value:"Overview",id:"overview",level:2},{value:"Annotation Interface",id:"annotation-interface",level:2},{value:"Key Features",id:"key-features",level:3},{value:"Data Model",id:"data-model",level:2},{value:"1. ImageWithLabels",id:"1-imagewithlabels",level:3},{value:"2. TrainingSet",id:"2-trainingset",level:3},{value:"Working with Training Sets",id:"working-with-training-sets",level:2},{value:"Creating Training Sets",id:"creating-training-sets",level:3},{value:"Managing Training Sets",id:"managing-training-sets",level:3},{value:"Using Training Sets for Machine Learning",id:"using-training-sets-for-machine-learning",level:3},{value:"Annotation Best Practices",id:"annotation-best-practices",level:2},{value:"Training Set Organization Strategies",id:"training-set-organization-strategies",level:2},{value:"Technical Details",id:"technical-details",level:2},{value:"Annotation Storage",id:"annotation-storage",level:3},{value:"Training Set Implementation",id:"training-set-implementation",level:3},{value:"Related Documentation",id:"related-documentation",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"annotation-and-training-sets",children:"Annotation and Training Sets"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(n.p,{children:["The annotation system in Studio is built on the ",(0,s.jsx)(n.a,{href:"https://github.com/Britefury/django-labeller",children:"Django-Labeller"})," open-source tool, integrated with additional functionality for managing training sets. This document explains how annotation works and how to use training sets to organize your annotated tiles for machine learning."]}),"\n",(0,s.jsx)(n.h2,{id:"annotation-interface",children:"Annotation Interface"}),"\n",(0,s.jsx)(n.p,{children:"The annotation interface allows users to mark regions of interest in image tiles. After images are uploaded and tiled, they can be accessed through the annotation page."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Annotation Interface",src:i(655).default+"",width:"1202",height:"756"})}),"\n",(0,s.jsx)(n.h3,{id:"key-features",children:"Key Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multiple Annotation Tools"}),": Draw polygons, rectangles, and other shapes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Label Classes"}),": Assign categories to annotations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Image Navigation"}),": Browse through tiles from the same source image"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Training Set Management"}),": Group tiles for machine learning"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"data-model",children:"Data Model"}),"\n",(0,s.jsx)(n.p,{children:"The annotation system is built around two main models:"}),"\n",(0,s.jsx)(n.h3,{id:"1-imagewithlabels",children:"1. ImageWithLabels"}),"\n",(0,s.jsx)(n.p,{children:"This model connects image tiles with their annotations:"}),"\n",(0,s.jsx)(n.mermaid,{value:'classDiagram\n    class ImageWithLabels {\n        +ImageField image\n        +ForeignKey labels\n        +CharField source_image_id\n        +ForeignKey project_image\n        +ForeignKey project\n        +JSONField metadata\n        +IntegerField tile_index\n        +DateTimeField created_at\n        +DateTimeField updated_at\n        +is_tile()\n        +get_siblings()\n    }\n\n    class Labels {\n    }\n\n    class ProjectImage {\n    }\n\n    class Project {\n    }\n\n    ImageWithLabels "*" --\x3e "1" Labels : labels\n    ImageWithLabels "*" --\x3e "1" ProjectImage : project_image\n    ImageWithLabels "*" --\x3e "1" Project : project'}),"\n",(0,s.jsx)(n.p,{children:"Key aspects:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Each tile is linked to its source image (",(0,s.jsx)(n.code,{children:"project_image"})," or legacy ",(0,s.jsx)(n.code,{children:"source_image_id"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Annotations are stored in the linked ",(0,s.jsx)(n.code,{children:"labels"})," object"]}),"\n",(0,s.jsxs)(n.li,{children:["Tiles keep track of their position in the original image (",(0,s.jsx)(n.code,{children:"tile_index"}),")"]}),"\n",(0,s.jsx)(n.li,{children:"Metadata can store additional information about the tile"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"2-trainingset",children:"2. TrainingSet"}),"\n",(0,s.jsx)(n.p,{children:"This model allows grouping tiles for training:"}),"\n",(0,s.jsx)(n.mermaid,{value:'classDiagram\n    class TrainingSet {\n        +UUIDField id\n        +CharField name\n        +TextField description\n        +ForeignKey project\n        +ForeignKey created_by\n        +DateTimeField created_at\n        +ManyToManyField tiles\n    }\n    \n    class ImageWithLabels {\n    }\n    \n    class Project {\n    }\n    \n    class User {\n    }\n    \n    TrainingSet "*" --\x3e "1" Project : project\n    TrainingSet "*" --\x3e "1" User : created_by\n    TrainingSet "*" --\x3e "*" ImageWithLabels : tiles'}),"\n",(0,s.jsx)(n.p,{children:"Key aspects:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Each training set has a name and optional description"}),"\n",(0,s.jsx)(n.li,{children:"Training sets belong to a specific project"}),"\n",(0,s.jsx)(n.li,{children:"Tiles are connected through a many-to-many relationship (tiles can be in multiple training sets)"}),"\n",(0,s.jsx)(n.li,{children:"System tracks who created each training set"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"working-with-training-sets",children:"Working with Training Sets"}),"\n",(0,s.jsx)(n.p,{children:"Training sets are collections of tiles that you want to use for training machine learning models. They allow you to:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Group relevant tiles together"}),"\n",(0,s.jsx)(n.li,{children:"Create different versions of training data"}),"\n",(0,s.jsx)(n.li,{children:"Compare performance between different sets"}),"\n",(0,s.jsx)(n.li,{children:"Maintain separate training and validation sets"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Training Set Selection",src:i(8003).default+"",width:"767",height:"789"})}),"\n",(0,s.jsx)(n.h3,{id:"creating-training-sets",children:"Creating Training Sets"}),"\n",(0,s.jsx)(n.p,{children:"Training sets can be created in two ways:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"From the Annotation Interface"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Select multiple tiles using Shift+click or Ctrl+click"}),"\n",(0,s.jsx)(n.li,{children:'Click "Create Training Set" button'}),"\n",(0,s.jsx)(n.li,{children:"Enter a name and description"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"From the Training Sets Management Page"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Navigate to Training Sets in the left sidebar"}),"\n",(0,s.jsx)(n.li,{children:'Click "Create New Set"'}),"\n",(0,s.jsx)(n.li,{children:"Select tiles to include"}),"\n",(0,s.jsx)(n.li,{children:"Enter a name and description"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"managing-training-sets",children:"Managing Training Sets"}),"\n",(0,s.jsx)(n.p,{children:"The platform offers several operations for training sets:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Viewing"}),": Select a training set from the dropdown to view only those tiles"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Editing"}),": Add or remove tiles from existing training sets"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Duplicating"}),": Create a copy of a training set to experiment with variations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Deleting"}),": Remove training sets that are no longer needed"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"using-training-sets-for-machine-learning",children:"Using Training Sets for Machine Learning"}),"\n",(0,s.jsx)(n.p,{children:"When creating a training job, you'll select which training set to use. The system will:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Gather all tiles in the selected training set"}),"\n",(0,s.jsx)(n.li,{children:"Extract their annotations as masks"}),"\n",(0,s.jsx)(n.li,{children:"Use these as training data for the machine learning model"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"annotation-best-practices",children:"Annotation Best Practices"}),"\n",(0,s.jsx)(n.p,{children:"For optimal machine learning results, follow these annotation guidelines:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consistent Annotation"}),": Be consistent in how you mark similar objects"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Complete Coverage"}),": Annotate all instances of a class in each tile"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Precise Boundaries"}),": Draw annotations that closely follow object boundaries"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Balanced Training Sets"}),": Include a diverse range of examples in your training sets"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Version Control"}),": Create multiple training sets to compare different annotation approaches"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"training-set-organization-strategies",children:"Training Set Organization Strategies"}),"\n",(0,s.jsx)(n.p,{children:"Consider these approaches to organizing your training sets:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"By Data Source"}),": Group tiles from the same original image or experiment"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"By Feature Type"}),": Create sets focused on specific features or structures"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Train/Validation Split"}),": Create separate sets for training and validation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Difficulty Levels"}),": Group easy and challenging examples separately"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Iterative Improvement"}),": Create new versions as you refine your annotations"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"technical-details",children:"Technical Details"}),"\n",(0,s.jsx)(n.h3,{id:"annotation-storage",children:"Annotation Storage"}),"\n",(0,s.jsx)(n.p,{children:"Annotations are stored using Django-Labeller's format:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"JSON Format"}),": Annotations are stored as structured JSON"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Polygon Representation"}),": Regions are stored as series of points"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Label Classification"}),": Each annotation has an associated class"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"training-set-implementation",children:"Training Set Implementation"}),"\n",(0,s.jsx)(n.p,{children:"Training sets use a many-to-many relationship with tiles, allowing:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Flexible Grouping"}),": Tiles can belong to multiple training sets"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Efficient Queries"}),": Fast retrieval of all tiles in a set"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Metadata Preservation"}),": Training set details are maintained separately from tile data"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"tiling",children:"Tiling Process"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"training",children:"Training Pipeline"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/Britefury/django-labeller",children:"Django-Labeller Documentation"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8003:e=>{e.exports="/static/docs/c1691e2b083d8d21.png"}}]);